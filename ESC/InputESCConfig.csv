Section,PSCmdL,PSCmdL2,paramObj,PerSrv,Comment
ExchangeServer,"Get-ExchangeServer | ? { $_.ServerRole -notlike ""*edge*""}",,"Name,Fqdn,Edition,AdminDisplayVersion,Site,ServerRole,ErrorReportingEnabled,CustomerFeedbackEnabled",0,
ExchSrvStatus,"if ( $Quickmode -ne $true){Get-ExchangeServer -status  | ? { $_.ServerRole -notlike ""*edge*""}}else{continue}",,"Name,Fqdn,StaticDomainControllers,StaticGlobalCatalogs,StaticConfigDomainController,StaticExcludedDomainControllers,ErrorReportingEnabled,CustomerFeedbackEnabled",0,
ClientAccessServer,Get-ClientAccessService,,"Name,Fqdn,OutlookAnywhereEnabled,AutoDiscoverServiceCN,AutoDiscoverServiceInternalUri,AutoDiscoverSiteScope",0,
MAPIVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-MapiVirtualDirectory -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,InternalAuthenticationMethods,ExternalURL,ExternalAuthenticationMethods,IISAuthenticationMethods,MetabasePath,Path",0,
WebServicesVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-WebServicesVirtualDirectory  -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,InternalAuthenticationMethods,ExternalURL,ExternalAuthenticationMethods,BasicAuthentication,DigestAuthentication,WindowsAuthentication,InternalNLBBypassUrl,MetabasePath,Path",0,
OABVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-OabVirtualDirectory  -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalURL,InternalAuthenticationMethods,ExternalURL,ExternalAuthenticationMethods,OfflineAddressBooks,RequireSSL,MetabasePath,Path",0,
OWAVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-OwaVirtualDirectory -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,InternalAuthenticationMethods,ExternalURL,ExternalAuthenticationMethods,InternalDownloadHostName,ExternalDownloadHostName,ChangePasswordEnabled,BasicAuthentication,DigestAuthentication,WindowsAuthentication,FormsAuthentication,LiveIdAuthentication,GzipLevel,FailBackUrl,OwaVersion,MetabasePath,Path",0,
ECPVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-EcpVirtualDirectory -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,InternalAuthenticationMethods,ExternalURL,ExternalAuthenticationMethods,ChangePasswordEnabled,BasicAuthentication,DigestAuthentication,WindowsAuthentication,FormsAuthentication,LiveIdAuthentication,GzipLevel,OwaVersion,FailBackUrl,MetabasePath,Path",0,
OutlookAnywhere,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-Outlookanywhere -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"ServerName,SSLOffloading,InternalHostName,InternalClientAuthenticationMethod,InternalClientsRequireSsl,ExternalHostName,ExternalClientAuthenticationMethod,ExternalClientsRequireSsl,IISAuthenticationMethods,MetabasePath,Name",0,
ActiveSync,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-ActiveSyncVirtualDirectory -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,ExternalURL,BasicAuthEnabled,WindowsAuthEnabled,ClientCertAuth,InternalAuthenticationMethods,ExternalAuthenticationMethods,CompressionEnabled,WebsiteSSLEnabled,MetabasePath,Path",0,
ActiveSyncPolicies,Get-MobileDeviceMailboxPolicy,,"Name,IsDefaultPolicy,AllowNonProvisionableDevices,DevicePasswordEnabled,AlphanumericDevicePasswordRequired,DeviceEncryptionEnabled,MinDevicePasswordLength,MaxInactivityTimeDeviceLock,MaxDevicePasswordFailedAttempts,AllowStorageCard,AllowCamera,RequireDeviceEncryption,AllowDesktopSync",0,
DAG-Status,if ( $Quickmode -ne $true){Get-DatabaseAvailabilityGroup -Status}else{continue},,"Identity,Servers,DatacenterActivationMode,WitnessServer,WitnessDirectory,AlternateWitnessServer,AlternateWitnessDirectory,WitnessShareInUse,NetworkCompression,NetworkEncryption,OperationalServers,ServersInMaintenance,StoppedMailboxServers,StartedMailboxServer,DatabaseAvailabilityGroupIpv4Addresses,DatabaseAvailabilityGroupIpAddresses,AllowCrossSiteRpcClientAccess,PrimaryActiveManager,ThirdPartyReplication,NetworkNames,ReplicationPort",0,
DAG All,Get-DatabaseAvailabilityGroup,,"Identity,Servers,DatacenterActivationMode,WitnessServer,WitnessDirectory,AlternateWitnessServer,AlternateWitnessDirectory,WitnessShareInUse,NetworkCompression,NetworkEncryption,OperationalServers,ServersInMaintenance,StoppedMailboxServers,StartedMailboxServer,DatabaseAvailabilityGroupIpv4Addresses,DatabaseAvailabilityGroupIpAddresses,AllowCrossSiteRpcClientAccess,PrimaryActiveManager,ThirdPartyReplication,NetworkNames,ReplicationPort,AutoDagSchemaVersion,AutoDagDatabaseCopiesPerDatabase,AutoDagDatabaseCopiesPerVolume,AutoDagTotalNumberOfDatabases,AutoDagTotalNumberOfServers,AutoDagDatabasesRootFolderPath,AutoDagVolumesRootFolderPath,AutoDagAllServersInstalled,AutoDagAutoReseedEnabled,AutoDagDiskReclaimerEnabled,AutoDagBitlockerEnabled,AutoDagFIPSCompliant,ReplayLagManagerEnabled",0,
DAGNetwork,Get-DatabaseAvailabilityGroupNetwork,,"Name,Subnets,Interfaces,MapiAccessEnabled,ReplicationEnabled,IgnoreNetwork,Identity",0,
ExchCertificate,Get-ExchangeCertificate -server $server| select *,,"SrvName,Thumbprint,Subject,Issuer,NotBefore,NotAfter,Services",1,
MbxServer,Get-MailboxServer,,"Name,AutodatabaseMountDial,DatabaseCopyAutoActivationPolicy,MAPIEncryptionRequired,DatabaseAvailabilityGroup,ServerRole",0,
MbxDBMbxcount,$allDBresult=@();get-mailboxdatabase | % {$mbxcount=(get-mailbox -database $_.identity).count; $MbxDBCount=[PSCustomObject]@{ Database=$_.identity; MBXCount =$mbxcount};$allDBresult+=$MbxDBCount};$allDBresult,,"Database,MBXCount",0,
MailboxDatabase,$allresmbxdb=@();$mbsrv=get-mailboxserver;foreach($mbxs in $mbsrv){$resmbxdb=Get-MailboxDatabase -server $mbxs;foreach($db in $resmbxdb ){$mbxdb=[PSCustomObject]@{ Server=$mbxs.identity;Identity =$db.name;Recovery =$db.Recovery;CircularLoggingEnabled =$db.CircularLoggingEnabled;OfflineAddressBook =$db.OfflineAddressBook;PublicFolderDatabase =$db.PublicFolderDatabase;DataMoveReplicationConstraint =$db.DataMoveReplicationConstraint;ActivationPreference =$db.ActivationPreference;MailboxRetention =$db.MailboxRetention;DeletedItemRetention =$db.DeletedItemRetention;MountAtStartup =$db.MountAtStartup;Servers =$db.Servers;MountedOnServer =$db.MountedOnServer;DatabaseCopies =$db.DatabaseCopies;ReplayLagTimes =$db.ReplayLagTimes;TruncationLagTimes =$db.TruncationLagTimes;AllowFileRestore =$db.AllowFileRestore;RetainDeletedItemsUntilBackup =$db.RetainDeletedItemsUntilBackup;IssueWarningQuota =$db.IssueWarningQuota;ProhibitSendQuota =$db.ProhibitSendQuota;ProhibitSendReceiveQuota =$db.ProhibitSendReceiveQuota;RPCClientAccessServer =$db.RPCClientAccessServer;IsExcludedFromProvisioning =$db.IsExcludedFromProvisioning;MasterServerOrAvailabilityGroup =$db.MasterServerOrAvailabilityGroup;MasterType =$db.MasterType;MaintenanceSchedule =$db.MaintenanceSchedule;EdbFilePath =$db.EdbFilePath;LogFolderPath =$db.LogFolderPath};$allresmbxdb+= $mbxdb}};$allresmbxdb,,"Server,Identity,Recovery,CircularLoggingEnabled,OfflineAddressBook,PublicFolderDatabase,DataMoveReplicationConstraint,ActivationPreference,MailboxRetention,DeletedItemRetention,MountAtStartup,Servers,MountedOnServer,DatabaseCopies,ReplayLagTimes,TruncationLagTimes,AllowFileRestore,RetainDeletedItemsUntilBackup,IssueWarningQuota,ProhibitSendQuota,ProhibitSendReceiveQuota,RPCClientAccessServer,IsExcludedFromProvisioning,MasterServerOrAvailabilityGroup,MasterType,BackgroundDatabaseMaintenance,MaintenanceSchedule,EdbFilePath,LogFolderPath",0,
MbxDBSizeBckpInfo,Get-MailboxDatabase -server $server -status,,"SrvName,Name,DatabaseSize,AvailableNewMailboxSpace,SnapshotLastFullBackup,SnapshotLastIncrementalBackup,SnapshotLastDifferentialBackup,LastFullBackup,LastIncrementalBackup,LastDifferentialBackup",1,
MbxDatabaseCopyStatus,Get-MailboxDatabaseCopyStatus -server $server -connectionstatus,,"SrvName,Identity,Status,ActiveDatabaseCopy,ActivationSuspended,CopyQueueLength,ReplayQueueLength,LogCopyQueueIncreasing,LogReplayQueueIncreasing,ContentIndexState,LastInspectedLogTime,ActiveCopy,IncomingLogCopyingNetwork,SeedingNetwork",1,
PublicFolderDB,$allrespfdb=@();$mbsrv=get-mailboxserver;foreach($mbxs in $mbsrv){$resmbxdb=Get-PublicFolderDatabase -server $mbxs;foreach($db in $resmbxdb ){$mbxdb=[PSCustomObject]@{ Server=$mbxs.identity;Identity=$db.name;CircularLoggingEnabled =$db.CircularLoggingEnabled;EdbFilePath =$db.EdbFilePath;LogFolderPath =$db.LogFolderPath;MountAtStartup =$db.MountAtStartup;FirstInstance =$db.FirstInstance;MaxItemSize =$db.MaxItemSize;ItemRetentionPeriod =$db.ItemRetentionPeriod;ProhibitPostQuota =$db.ProhibitPostQuota;ReplicationSchedule =$db.ReplicationSchedule;IssueWarningQuota =$db.IssueWarningQuota;AllowFileRestore =$db.AllowFileRestore;RetainDeletedItemsUntilBackup =$db.RetainDeletedItemsUntilBackup;MaintenanceSchedule =$db.MaintenanceSchedule};$allrespfdb+=$mbxdb}};$allrespfdb,,"Server,Identity,EdbFilePath,LogFolderPath,CircularLoggingEnabled,MountAtStartup,FirstInstance,MaxItemSize,ItemRetentionPeriod,ProhibitPostQuota,ReplicationSchedule,IssueWarningQuota,AllowFileRestore,RetainDeletedItemsUntilBackup,MaintenanceSchedule",0,
PFDBSizeBckpInfo,Get-PublicFolderDatabase -server $server -status,,"SrvName,Identity,DatabaseSize,AvailableNewMailboxSpace,SnapshotLastFullBackup,SnapshotLastIncrementalBackup,SnapshotLastDifferentialBackup,LastFullBackup,LastIncrementalBackup,LastDifferentialBackup",1,
OfflineAddressBook,Get-OfflineAddressBook,,"Name,Identity,Server,AddressLists,Versions,IsDefault,GeneratingMailbox,WebDistributionEnabled,GlobalWebDistributionEnabled,ShadowMailboxDistributionEnabled,VirtualDirectories,Schedule,PublicFolderDatabase,PublicFolderDistributionEnabled",0,
MbxSystem,Get-Mailbox -arbitration,,"Identity,Alias,Database,PersistedCapabilities,RecipientType,RecipientTypeDetails",0,
DiscoveryMbx,"Get-Mailbox -Resultsize unlimited -Filter {RecipientTypeDetails -eq ""DiscoveryMailbox""}",,"Identity,Alias,Database,PersistedCapabilities,RecipientType,RecipientTypeDetails",0,
AcceptedDomain,Get-AcceptedDomain,,"Name,DomainName,DomainType,Default,IsValid",0,
TransportServer,Get-TransportService,,"Name,AntispamAgentsEnabled,AntispamUpdatesEnabled,DelayNotificationTimeout,MessageExpirationTimeout,MessageRetryInterval,ExternalDNSAdapterEnabled,ExternalDNSServers,InternalDNSAdapterEnabled,InternalDNSServers,MaxOutboundConnections,MaxPerDomainOutboundConnections,TransientFailureRetryCount,ConnectivityLogEnabled,MessageTrackingLogEnabled,MessageTrackingLogSubjectLoggingEnabled,ActiveUserStatisticsLogPath,ConnectivityLogPath,MessageTrackingLogPath,ReceiveProtocolLogPath,RoutingTableLogPath,SendProtocolLogPath,ServerStatisticsLogPath",0,
AutoDiscoverVD,$allvdresult=@();$allCAS=Get-ClientAccessService; foreach ($cassrv in $allcas) {$vdresult= Get-AutodiscoverVirtualDirectory -server $cassrv -ADPropertiesOnly;$allvdresult+=$vdresult};$allvdresult,,"Server,Identity,InternalUrl,InternalAuthenticationMethods,ExternalUrl,ExternalAuthenticationMethods,RequireSSL,BasicAuthentication,DigestAuthentication,WindowsAuthentication,MetabasePath,Path",0,
HybridConfiguration,get-HybridConfiguration,,"Identity,ClientAccessServers,EdgeTransportServers,ReceivingTransportServers,SendingTransportServers,OnPremisesSmartHost,Domains,Features,ExternalIPAddresses,TlsCertificateName,ServiceInstance,ClientAccessServers,WhenChanged,WhenCreated",0,
EmailAddressPolicy,get-EmailAddressPolicy,,"Identity,RecipientFilter,LdapRecipientFilter,LastUpdatedRecipientFilter,RecipientFilterApplied,IncludedRecipients,ConditionalDepartment,ConditionalCompany,ConditionalStateOrProvince,ConditionalCustomAttribute1,ConditionalCustomAttribute2,ConditionalCustomAttribute3,ConditionalCustomAttribute4,ConditionalCustomAttribute5,ConditionalCustomAttribute6,ConditionalCustomAttribute7,ConditionalCustomAttribute8,ConditionalCustomAttribute9,ConditionalCustomAttribute10,ConditionalCustomAttribute11,ConditionalCustomAttribute12,ConditionalCustomAttribute13,ConditionalCustomAttribute14,ConditionalCustomAttribute15,RecipientContainer,RecipientFilterType,Priority,EnabledPrimarySMTPAddressTemplate,EnabledEmailAddressTemplates,DisabledEmailAddressTemplates,HasEmailAddressSetting,HasMailboxManagerSetting,NonAuthoritativeDomains,AdminDescription,ManagedByFilter,ManagedByLdapFilter,AdminDisplayName,ExchangeVersion,WhenChanged,WhenCreated",0,
OrganizationRelationship,Get-OrganizationRelationship,,"Identity,DomainNames,FreeBusyAccessEnabled,FreeBusyAccessLevel,FreeBusyAccessScope,MailboxMoveEnabled,MailboxMoveDirection,DeliveryReportEnabled,MailTipsAccessEnabled,MailTipsAccessLevel,MailTipsAccessScope,PhotosEnabled,TargetApplicationUri,TargetSharingEpr,TargetOwaURL,TargetAutodiscoverEpr,OrganizationContact,Enabled,ArchiveAccessEnabled,WhenChanged,WhenCreated",0,
AvailabilityAddressSpace,Get-AvailabilityAddressSpace,,"Identity,ForestName,UserName,UseServiceAccount,AccessMethod,ProxyUrl,TargetAutodiscoverEpr,ParentPathId,WhenChanged,WhenCreated",0,
IntraOrganizationConnector,Get-IntraOrganizationConnector,,"Identity,TargetAddressDomains,DiscoveryEndpoint,Enabled,WhenChanged,WhenCreated",0,
PartnerApplication,Get-PartnerApplication,,"Identity,Enabled,ApplicationIdentifier,CertificateStrings,AuthMetadataUrl,Realm,UseAuthServer,AcceptSecurityIdentifierInformation,LinkedAccount,DeploymentId,IssuerIdentifier,AccountType,AppOnlyPermissions,ActAsPermissions,WhenChanged,WhenCreated",0,
AuthServer,Get-AuthServer,,"Identity,IssuerIdentifier,CertificateStrings,RsaKeyModulusExponents,CurrentEncryptedAppSecret,PreviousEncryptedAppSecret,TokenIssuingEndpoint,AuthorizationEndpoint,ApplicationIdentifier,AuthMetadataUrl,DomainName,Realm,Type,Enabled,IsDefaultAuthorizationEndpoint,WhenChanged,WhenCreated",0,
AllTranspRules,Get-TransportRule,,"Identity,Priority,DlpPolicy,DlpPolicyId,Comments,ManuallyModified,ActivationDate,ExpiryDate,Description,RuleVersion,Conditions,Exceptions,Actions,State,Mode,RuleErrorAction,SenderAddressLocation,RuleSubType,UseLegacyRegex,From,FromMemberOf,FromScope,SentTo,SentToMemberOf,SentToScope,BetweenMemberOf1,BetweenMemberOf2,ManagerAddresses,ManagerForEvaluatedUser,SenderManagementRelationship,ADComparisonAttribute,ADComparisonOperator,SenderADAttributeContainsWords,SenderADAttributeMatchesPatterns,RecipientADAttributeContainsWords,RecipientADAttributeMatchesPatterns,AnyOfToHeader,AnyOfToHeaderMemberOf,AnyOfCcHeader,AnyOfCcHeaderMemberOf,AnyOfToCcHeader,AnyOfToCcHeaderMemberOf,HasClassification,HasNoClassification,SubjectContainsWords,SubjectOrBodyContainsWords,HeaderContainsMessageHeader,HeaderContainsWords,FromAddressContainsWords,SenderDomainIs,RecipientDomainIs,SubjectMatchesPatterns,SubjectOrBodyMatchesPatterns,HeaderMatchesMessageHeader,HeaderMatchesPatterns,FromAddressMatchesPatterns,AttachmentNameMatchesPatterns,AttachmentExtensionMatchesWords,AttachmentPropertyContainsWords,ContentCharacterSetContainsWords,HasSenderOverride,MessageContainsDataClassifications,MessageContainsAllDataClassifications,SenderIpRanges,SCLOver,AttachmentSizeOver,MessageSizeOver,WithImportance,MessageTypeMatches,RecipientAddressContainsWords,RecipientAddressMatchesPatterns,SenderInRecipientList,RecipientInSenderList,AttachmentContainsWords,AttachmentMatchesPatterns,AttachmentIsUnsupported,AttachmentProcessingLimitExceeded,AttachmentHasExecutableContent,AttachmentIsPasswordProtected,AnyOfRecipientAddressContainsWords,AnyOfRecipientAddressMatchesPatterns,ExceptIfFrom,ExceptIfFromMemberOf,ExceptIfFromScope,ExceptIfSentTo,ExceptIfSentToMemberOf,ExceptIfSentToScope,ExceptIfBetweenMemberOf1,ExceptIfBetweenMemberOf2,ExceptIfManagerAddresses,ExceptIfManagerForEvaluatedUser,ExceptIfSenderManagementRelationship,ExceptIfADComparisonAttribute,ExceptIfADComparisonOperator,ExceptIfSenderADAttributeContainsWords,ExceptIfSenderADAttributeMatchesPatterns,ExceptIfRecipientADAttributeContainsWords,ExceptIfRecipientADAttributeMatchesPatterns,ExceptIfAnyOfToHeader,ExceptIfAnyOfToHeaderMemberOf,ExceptIfAnyOfCcHeader,ExceptIfAnyOfCcHeaderMemberOf,ExceptIfAnyOfToCcHeader,ExceptIfAnyOfToCcHeaderMemberOf,ExceptIfHasClassification,ExceptIfHasNoClassification,ExceptIfSubjectContainsWords,ExceptIfSubjectOrBodyContainsWords,ExceptIfHeaderContainsMessageHeader,ExceptIfHeaderContainsWords,ExceptIfFromAddressContainsWords,ExceptIfSenderDomainIs,ExceptIfRecipientDomainIs,ExceptIfSubjectMatchesPatterns,ExceptIfSubjectOrBodyMatchesPatterns,ExceptIfHeaderMatchesMessageHeader,ExceptIfHeaderMatchesPatterns,ExceptIfFromAddressMatchesPatterns,ExceptIfAttachmentNameMatchesPatterns,ExceptIfAttachmentExtensionMatchesWords,ExceptIfAttachmentPropertyContainsWords,ExceptIfContentCharacterSetContainsWords,ExceptIfSCLOver,ExceptIfAttachmentSizeOver,ExceptIfMessageSizeOver,ExceptIfWithImportance,ExceptIfMessageTypeMatches,ExceptIfRecipientAddressContainsWords,ExceptIfRecipientAddressMatchesPatterns,ExceptIfSenderInRecipientList,ExceptIfRecipientInSenderList,ExceptIfAttachmentContainsWords,ExceptIfAttachmentMatchesPatterns,ExceptIfAttachmentIsUnsupported,ExceptIfAttachmentProcessingLimitExceeded,ExceptIfAttachmentHasExecutableContent,ExceptIfAttachmentIsPasswordProtected,ExceptIfAnyOfRecipientAddressContainsWords,ExceptIfAnyOfRecipientAddressMatchesPatterns,ExceptIfHasSenderOverride,ExceptIfMessageContainsDataClassifications,ExceptIfMessageContainsAllDataClassifications,ExceptIfSenderIpRanges,PrependSubject,SetAuditSeverity,ApplyClassification,ApplyHtmlDisclaimerLocation,ApplyHtmlDisclaimerText,ApplyHtmlDisclaimerFallbackAction,ApplyRightsProtectionTemplate,SetSCL,SetHeaderName,SetHeaderValue,RemoveHeader,AddToRecipients,CopyTo,BlindCopyTo,AddManagerAsRecipientType,ModerateMessageByUser,ModerateMessageByManager,RedirectMessageTo,RejectMessageEnhancedStatusCode,RejectMessageReasonText,DeleteMessage,Disconnect,Quarantine,SmtpRejectMessageRejectText,SmtpRejectMessageRejectStatusCode,LogEventText,StopRuleProcessing,SenderNotificationType,GenerateIncidentReport,IncidentReportContent,RouteMessageOutboundConnector,RouteMessageOutboundRequireTls,ApplyOME,RemoveOME,OMEExpiryDays,GenerateNotification,WhenChanged",0,
CASArray,Get-ClientAccessArray,,"Name,Fqdn,Site,SiteName,Members",0,
