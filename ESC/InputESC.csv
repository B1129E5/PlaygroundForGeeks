Section,PSCmdL,PSCmdL2,paramObj,PerSrv,Comment
MRA,"Get-ManagementRoleAssignment | ? { $_.RoleAssignmentDelegationType -like ""*Regular*""}",,"Name,Role,RoleAssigneeName,EffectiveUserName,RoleAssigneeType,RoleAssignmentDelegationType,CustomRecipientWriteScope,CustomConfigWriteScope,RecipientReadScope,ConfigReadScope,RecipientWriteScope,ConfigWriteScope,RoleAssignee,AssignmentMethod,WhenCreated,WhenChanged",0,Display the default and custom Management Role Assignment without delegating MRA
MRCustom,Get-ManagementRole | ? { $_.IsRootRole -eq $false -and $_.IsEndUserRole -eq $false },,"Name,RoleType,IsRootRole,IsEndUserRole,Parent,ImplicitRecipientReadScope,ImplicitRecipientWriteScope,ImplicitConfigReadScope,ImplicitConfigWriteScope,WhenCreated,WhenChanged",0,Display Custom Management roles
MRCustomDetails,"$AllMR=Get-ManagementRole | ? { $_.IsRootRole -eq $false -and $_.IsEndUserRole -eq $false };$allmresult=@(); foreach ($MR in $allMR){ $allMRE=Get-ManagementRoleEntry -Identity $MR | select Role,Name,@{Name='Parameters';Expression={[string]::join("";"",($_.Parameters))}},WhenCreated,WhenChanged; foreach ($MRE in  $allMRE){$MREobj = [PSCustomObject]@{ Role = $MRE.Role;RoleType = $mr.RoleType;Name = $MRE.name;Parameters = $MRE.Parameters;WhenCreated = $MRE.WhenCreated;WhenChanged = $MRE.WhenChanged};$allmresult+=$MREobj}};$allmresult",,"Role,Roletype,Name,WhenCreated,WhenChanged,Parameters",0,Display details with CmdLet and parameters for each Custom Management roles
MRScope,Get-Managementscope,,"Name,RecipientRoot,RecipientFilter,ServerFilter,DatabaseFilter,ScopeRestrictionType,Exclusive,WhenCreated,WhenChanged",0,Display the details of each custom Management scopes
AdminAuditLog,Get-AdminAuditLogConfig,,"Name,AdminAuditLogEnabled,LogLevel,AdminAuditLogCmdlets,AdminAuditLogExcludedCmdlets,AdminAuditLogAgeLimit,WhenCreated,WhenChanged",0,Display the current configuration for the AdminAuditLog
ReceiveConnector,Get-ReceiveConnector,,"Server,Name,TransportRole,PermissionGroups,AuthMechanism,Bindings,RemoteIPRanges,MaxMessageSize,RequireTLS,DomainSecureEnabled,TlsCertificateName,ProtocolLoggingLevel,Banner,BinaryMimeEnabled,ChunkingEnabled,DefaultDomain,DeliveryStatusNotificationEnabled,EightBitMimeEnabled,SmtpUtf8Enabled,BareLinefeedRejectionEnabled,EnhancedStatusCodesEnabled,LongAddressesEnabled,OrarEnabled,SuppressXAnonymousTls,ProxyEnabled,AdvertiseClientSettings,Fqdn,ServiceDiscoveryFqdn,Comment,Enabled,ConnectionTimeout,ConnectionInactivityTimeout,MessageRateLimit,MessageRateSource,MaxInboundConnection,MaxInboundConnectionPerSource,MaxInboundConnectionPercentagePerSource,MaxHeaderSize,MaxHopCount,MaxLocalHopCount,MaxLogonFailures,MaxProtocolErrors,MaxRecipientsPerMessage,PipeliningEnabled,RequireEHLODomain,RequireTLS,EnableAuthGSSAPI,ExtendedProtectionPolicy,LiveCredentialEnabled,TlsDomainCapabilities,RejectReservedTopLevelRecipientDomains,RejectReservedSecondLevelRecipientDomains,RejectSingleLabelRecipientDomains,AcceptConsumerMail,SizeEnabled,TarpitInterval,AuthTarpitInterval,MaxAcknowledgementDelay,Identity,WhenChanged,WhenCreated",0,Display the list of Receive Connectors and their settings
RCAnonymous,"Get-ReceiveConnector  | Get-ADPermission | ? {$_.ExtendedRights -like ""ms-Exch-SMTP-Accept-Any-Recipient"" -and $_.User -like ""*NT AUTHORITY\ANONYMOUS LOGON*""}",,"Identity,User,Deny,ISInherited",0,Display Receive Connectors configured as OpenRelay with the permission setting ms-Exch-SMTP-Accept-Any-Recipient
RemoteDomain,Get-RemoteDomain,,"Identity,DomainName,AutoForwardEnabled,AllowedOOFType,AutoReplyEnabled,IsInternal,TargetDeliveryDomain,ByteEncoderTypeFor7BitCharsets,CharacterSet,NonMimeCharacterSet,DeliveryReportEnabled,NDREnabled,MeetingForwardNotificationEnabled,ContentType,DisplaySenderName,PreferredInternetCodePageForShiftJis,RequiredCharsetCoverage,TNEFEnabled,LineWrapSize,TrustedMailOutboundEnabled,TrustedMailInboundEnabled,UseSimpleDisplayName,NDRDiagnosticInfoEnabled,MessageCountThreshold,WhenChanged,WhenCreated",0,Display the Remote domain and their parameters AutoForwardEnabled
TransportRule,"Get-TransportRule | where { $_.actions -like ""*BlindCopyTo*"" -or $_.actions -like ""*CopyTo*"" -or $_.actions -like ""*RedirectMessage*"" }",,"Identity,SentTo,BlindCopyTo,CopyTo,RedirectMessageTo,State,Mode,WhenChanged",0,"Display the list of Transport Rule set with SentTo, BlindCopyTo, CopyTo, RedirectMessageTo condition"
JournalRule,Get-JournalRule,,"Name,JournalEmailAddress,Scope,Recipient,Enabled",0,Display the list of Journal Rule
MbxDBJournaling,Get-Mailboxdatabase,,"Identity,JournalRecipient,WhenCreated,WhenChanged",0,Display if Journaling mailbox have been set on databases
MailboxDatabaseReceiveAs,"Get-MailboxDatabase -IncludePreExchange2013  | Get-ADPermission | ? {$_.ExtendedRights -like ""Receive-AS"" -and $_.Deny -eq $false }","Get-MailboxDatabase  | Get-ADPermission | ? {$_.ExtendedRights -like ""Receive-AS"" -and $_.Deny -eq $false }","Identity,User,Deny,isInherited",0,Display for each database the list of account with Receive-As permission
MailboxDatabaseSendAs,"Get-MailboxDatabase -IncludePreExchange2013  | Get-ADPermission | ? {$_.ExtendedRights -like ""Send-AS"" -and $_.Deny -eq $false }","Get-MailboxDatabase  | Get-ADPermission | ? {$_.ExtendedRights -like ""Send-AS"" -and $_.Deny -eq $false }","Identity,User,Deny,isInherited",0,Display for each database the list of account with Send-As permission
PartConfPerm,"$listDNSRV =@(foreach ($srv in (Get-ExchangeServer)){(Get-ExchangeServer -identity $srv).distinguishedName});$listDNConf =@(for ($i=2 ;$i -le 6 ;$i++){(Get-ExchangeServer)[1].distinguishedName.split("","",$i)[$i-1]});$listDN =$listDNConf[5..0]+$listDNSRV;foreach ($DNtocheck in $listDN){Get-ADPermission -Identity $DNtocheck}",,"Identity,User,AccessRights,ExtendedRights,Deny,isInherited,InheritanceType",0,Display permission on some Exchange containers in the Configuration Partition
DAGEncryption,Get-DatabaseAvailabilityGroup,,"Name,NetworkEncryption,AutoDagBitlockerEnabled",0,Display for some specific DAG setting related to Security
POP,"Get-PopSettings -server $CASsrv | select Server,LoginType,UnencryptedOrTLSBindings,SSLBindings,ProtocolLogEnabled,WhenCreated,WhenChanged",,"Server,Servicestate1,Servicestate2,LoginType,UnencryptedOrTLSBindings,SSLBindings,ProtocolLogEnabled,LogFileLocation,WhenCreated,WhenChanged",0,"For each server, display the status of POP service and some important POP settings"
IMAP,"Get-IMAPSettings  -server $CASsrv  | select Server,LoginType,UnencryptedOrTLSBindings,SSLBindings,ProtocolLogEnabled,WhenCreated,WhenChanged",,"Server,Servicestate1,Servicestate2,LoginType,UnencryptedOrTLSBindings,SSLBindings,ProtocolLogEnabled,LogFileLocation,WhenCreated,WhenChanged",0,"For each server, display the status of IMAP service and some important IMAP settings"
Kerberos,"$casres=@();$casres=Get-ClientAccessService -identity $server -IncludeAlternateServiceAccountCredentialStatus | select identity, AlternateServiceAccountConfiguration;$casresalt = $casres.AlternateServiceAccountConfiguration -replace ""`t|`n|`r"","" "";$resobj = [PSCustomObject]@{srvname = $server;ASA = $casresalt};$resobj",,"SRVName,ASA",1,Display the Kerberos configuration for available CAS Servers
ExchGroup,"$OUExch=""ou=Microsoft Exchange Security Groups,""+$forestDN;(get-adgroup  -filter * -searchbase $OUExch -server $gc).DistinguishedName",,"Parentgroup,MemberPath,ObjectClass,Level,LastLogonDate,PasswordLastSet,Enabled,HasMbx,DN",0,Display the content of all groups in the OU Microsoft Exchange Security Groups and dump the content of their nested groups with additional information for member's users
ExchGroupCount,continue,,"Group,Count",0,Display for each group in the OU Microsoft Exchange Security Groups the number of unique members
ADRootGrp,"$listsid=@( ""S-1-5-32-544"", ""S-1-5-32-548"",""$sidroot-512"",""$sidroot-518"",""$sidroot-519""); $adgroup=@();foreach ($sid in $listsid) {$adgroup+=(Get-ADgroup -identity $sid  -server $gc).DistinguishedName};$adgroup",,"Parentgroup,MemberPath,ObjectClass,Level,LastLogonDate,PasswordLastSet,Enabled,HasMbx,DN",0,Display the content of some AD groups in the Root Domain and dump the content of their nested groups with additional information for member's users
ADRootGrpCount,continue,,"Group,Count",0,Display for some AD groups in the Root Domain the number of unique members
ExchVersion,invoke-command -ComputerName $server -ScriptBlock {Get-Command Exsetup.exe | ForEach {$_.FileVersionInfo|select ProductVersion}},,"SrvName,ProductVersion",1,Retrieve Exchange Build Number CU-SU
SrvLocalAdmin,"Get-WmiObject -Class Win32_GroupUser -Filter ""GroupComponent=""""Win32_Group.Domain='$server',Name='Administrators'"""""" -ComputerName $server |% {if ($_.PartComponent -match 'cimv2:(.+).Domain=""(.+)"",Name=""(.+)""'){$members=@();$members+=$Matches[1]+"";""+$Matches[2]+""\""+$Matches[3];$members}}",,"SrvName,MemberPath,ObjectClass,Level,LastLogonDate,PasswordLastSet,Enabled,HasMbx,DN",1,Display the content of the local Administrators groups and dump the content of nested groups with additional information for member's users
SrvLocalAdminCount,continue,,"Server,Group,Count",0,Display for each server the unique number of Forest Members per group and the total for each server
SMBv1,"if (get-exchangeserver -identity $Server | ? IsE15OrLater -eq true ){$ResutltWF = Get-WindowsFeature -computername $Server -name FS-SMB1;$ResultSMB = (Get-SmbServerConfiguration -CimSession $Server).EnableSMB1Protocol}else{$ResutltWF=@{Displayname=""Exchange 2010 Server"";InstallState =""N/A""};$ResultSMB=invoke-command -computername $server{Get-Item HKLM:\SYSTEM\CurrentControlSet\Services\LanmanServer\Parameters | ForEach-Object {(Get-ItemProperty $_.pspath).smb1}}};$resultfinal=[PSCustomObject]@{ DisplayName = $ResutltWF.Displayname;InstallState = $ResutltWF.InstallState;Enabled = $ResultSMB};$resultfinal",,"SrvName,DisplayName,InstallState,Enabled",1,Display the status of SMBv1
Services,"$resServices =@();$resServices = Get-WmiObject win32_service -ComputerName $server | Select DisplayName,Name,Pathname,StartMode,@{Name=""ServiceLogon"";Expression={$_.StartName}},State ;$resServices",,"SrvName,DisplayName,Name,Pathname,State,StartMode,ServiceLogon",1,"Display the list of services, status and path"
Software,,,"SrvName,DisplayName,DisplayVersion,Publisher",1,Display for each server the list of installed software on the server
ScheduledTask,$ScheduledTask = schtasks /query /s $server   /v /NH /fo csv ; $ScheduledTask,,"Server,TaskName,Run As User,Status,Next Run Time,Last Run Time,Last Result,Task To Run,Comment,Author,Logon Mode,Start In,Scheduled Task State,Idle Time,Power Management,Delete Task If Not Rescheduled,Stop Task If Runs X Hours and X Mins,Schedule,Schedule Type,Start Time,Start Date,End Date,Days,Months,Repeat: Every,Repeat: Until: Time,Repeat: Until: Duration,Repeat: Stop If Still Running",1,Display for each server the list of standard and custom Scheduled tasks 
TLS,,,"SrvName,RegistryLocation,DisabledByDefault,Enabled,SystemDefaultTlsVersions",1,Dump for each server the value of registry key for TLS if they exist
TransportAgent,"$uri=""http://"" + $server + ""/powershell?serializationlevel=full"";Invoke-Command -ConfigurationName Microsoft.Exchange -ConnectionUri $uri -ScriptBlock {get-transportagent}",,"SrvName,Identity,Enabled,Priority",1,Display for each server the list of installed Transport Agent
WFeatures,Get-WindowsFeature,,"Name,InstallState,Installed,DisplayName,FeatureType,DependsOn,Parent,Description",1,Display Windows Features
OrganizationConfig,Get-OrganizationConfig,,"Identity,EnableDownloadDomains,MailTipsExternalRecipientsTipsEnabled,DefaultPublicFolderAgeLimit,DefaultPublicFolderIssueWarningQuota,DefaultPublicFolderProhibitPostQuota,DefaultPublicFolderMaxItemSize,DefaultPublicFolderDeletedItemRetention,DefaultPublicFolderMovedItemRetention,PublicFoldersLockedForMigration,PublicFolderMigrationComplete,PublicFolderMailboxesLockedForNewConnections,PublicFolderMailboxesMigrationComplete,PublicFolderShowClientControl,PublicFoldersEnabled,ActivityBasedAuthenticationTimeoutEnabled,ActivityBasedAuthenticationTimeoutInterval,ActivityBasedAuthenticationTimeoutWithSingleSignOnEnabled,AppsForOfficeEnabled,AVAuthenticationService,CustomerFeedbackEnabled,DistributionGroupDefaultOU,DistributionGroupNameBlockedWordsList,DistributionGroupNamingPolicy,EwsAllowEntourage,EwsAllowList,EwsAllowMacOutlook,EwsAllowOutlook,EwsApplicationAccessPolicy,EwsBlockList,EwsEnabled,IPListBlocked,ElcProcessingDisabled,AutoExpandingArchiveEnabled,ExchangeNotificationEnabled,ExchangeNotificationRecipients,HierarchicalAddressBookRoot,Industry,MailTipsAllTipsEnabled,MailTipsGroupMetricsEnabled,MailTipsLargeAudienceThreshold,MailTipsMailboxSourcedTipsEnabled,ManagedFolderHomepage,MicrosoftExchangeRecipientEmailAddresses,MicrosoftExchangeRecipientEmailAddressPolicyEnabled,MicrosoftExchangeRecipientPrimarySmtpAddress,MicrosoftExchangeRecipientReplyRecipient,ForwardSyncLiveIdBusinessInstance,OrganizationSummary,ReadTrackingEnabled,SCLJunkThreshold,SIPAccessService,SIPSessionBorderController,MaxConcurrentMigrations,MaxAddressBookPolicies,MaxOfflineAddressBooks,IsExcludedFromOnboardMigration,IsExcludedFromOffboardMigration,IsFfoMigrationInProgress,IsProcessEhaMigratedMessagesEnabled,TenantRelocationsAllowed,ACLableSyncedObjectEnabled,PreferredInternetCodePageForShiftJis,RequiredCharsetCoverage,ByteEncoderTypeFor7BitCharsets,PublicComputersDetectionEnabled,RmsoSubscriptionStatus,IntuneManagedStatus,AzurePremiumSubscriptionStatus,HybridConfigurationStatus,ReleaseTrack,CompassEnabled,SharePointUrl,MapiHttpEnabled,RealTimeLogServiceEnabled,CustomerLockboxEnabled,OAuth2ClientProfileEnabled,PerTenantSwitchToESTSEnabled,LinkPreviewEnabled,ConnectorsEnabled,ConnectorsActionableMessagesEnabled,SmtpActionableMessagesEnabled,OfficeGraphActivitySharingOrgOptout,UnblockUnsafeSenderPromptEnabled,AsyncSendEnabled,RefreshSessionEnabled,IsAgendaMailEnabled,NetworkThrottlingConfiguration,BookingsEnabled,LeanPopoutEnabled,OrganizationConfigHash,LegacyExchangeDN,DisplayName,Heuristics,ResourceAddressLists,IsMixedMode,PreviousAdminDisplayVersion,IsAddressListPagingEnabled,ForeignForestFQDN,ForeignForestOrgAdminUSGSid,ForeignForestRecipientAdminUSGSid,ForeignForestViewOnlyAdminUSGSid,MimeTypes,IsLicensingEnforced,IsTenantAccessBlocked,IsTenantInGracePeriod,IsDehydrated,IsGuidPrefixedLegacyDnDisabled,IsMailboxForcedReplicationDisabled,RBACConfigurationVersion,RootPublicFolderMailbox,RemotePublicFolderMailboxes,AdminDisplayVersion,IsUpgradingOrganization,IsUpdatingServicePlan,ServicePlan,TargetServicePlan,WACDiscoveryEndpoint,UMAvailableLanguages,AdfsAuthenticationConfiguration,AdfsIssuer,AdfsAudienceUris,AdfsSignCertificateThumbprints,AdfsEncryptCertificateThumbprint,SiteMailboxCreationURL,DefaultDataEncryptionPolicy,MailboxDataEncryptionEnabled,EmptyAddressBookForNonExchangeUsers,MitigationsEnabled,EnableAuthAdminReadSession,DefaultAuthenticationPolicy,EnableOrgWidePermissionOnScopedRoles,UseIcsSyncStateStreaming,AllowedMailboxRegions,DefaultMailboxRegion,DefaultMailboxRegionLastUpdateTime,DirectReportsGroupAutoCreationEnabled,AllowToAddGuests,GuestsEnabled,GroupsCreationEnabled,HiddenMembershipGroupsCreationEnabled,GroupsCreationWhitelistedId,GroupsUsageGuidelinesLink,GroupsNamingPolicy,DataClassifications,InPlaceHolds,ServiceInstanceMove,GuestsUsageGuidelinesLink,FocusedInboxOn,FocusedInboxOnLastUpdateTime,ForestConfigVersion,ForestConfigLastRunTime,EndUserDLUpgradeFlowsDisabled,WhenChanged,WhenCreated",0,Display some setting of the Organization configuration
TransportConfig,Get-TransportConfig,,"ShadowRedundancyEnabled,SafetyNetHoldTime,ShadowHeartbeatFrequency,ShadowMessageAutoDiscardInterval,ShadowMessagePreferenceSetting,ShadowResubmitTimeSpan,RejectMessageOnShadowFailure,ExternalDsnMaxMessageAttachSize,InternalDsnMaxMessageAttachSize,HygieneSuite,MaxRecipientEnvelopeLimit,MaxSendSize,MaxReceiveSize,TLSReceiveDomainSecureList,TLSSendDomainSecureList,AddressBookPolicyRoutingEnabled,WhenCreated,WhenChanged",0,Display some setting Transport setting
SendConnector,Get-Sendconnector,,"Identity,Enabled,MaxMessageSize,AddressSpaces,ConnectedDomains,IsScopedConnector,ProtocolLoggingLevel,SmartHosts,SmartHostAuthMechanism,Port,Fqdn,TlsCertificateName,RequireTLS,TlsDomain,TlsAuthLevel,DomainSecureEnabled,SourceIPAddress,IgnoreSTARTTLS,DNSRoutingEnabled,ErrorPolicies,ConnectionInactivityTimeOut,ForceHELO,FrontendProxyEnabled,CloudServicesMailEnabled,RequireOorg,AuthenticationCredential,UseExternalDNSServers,EnabledSmtpMaxMessagesPerConnection,ConnectorType,SmartHostsString,CertificateSubject,Region,IsSmtpConnector,Comment,SourceRoutingGroup,SourceTransportServers,HomeMTA,HomeMtaServerId,WhenChanged,WhenChanged",0,Display some configuration for each Send Connector
TransportPipeline,Get-TransportService,,"Identity,PipelineTracingEnabled,PipelineTracingPath,PipelineTracingSenderAddress,WhenCreated,WhenChanged",0,Display for each server the status of the Transport Pipeline
MRA_Delegating,"Get-ManagementRoleAssignment | ? { $_.RoleAssignmentDelegationType -like ""*DelegatingOrgWide*""}",,"Name,Role,RoleAssigneeName,EffectiveUserName,RoleAssigneeType,CustomRecipientWriteScope,CustomConfigWriteScope,RecipientReadScope,ConfigReadScope,RecipientWriteScope,ConfigWriteScope,RoleAssignee,AssignmentMethod,WhenCreated,WhenChanged",0,Display only Delegating Management Role Assignment
